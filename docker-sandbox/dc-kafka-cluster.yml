#
# docker volume create --name sandbox_kafka_secrets --opt type=none --opt device=/apps/sandbox/kafka-broker/secrets --opt o=bind
# docker volume create --name sandbox_kafka_data --opt type=none --opt device=/apps/sandbox/kafka-broker/data --opt o=bind
# docker volume create --name sandbox_kafka_log --opt type=none --opt device=/apps/sandbox/kafka-broker/log --opt o=bind
#
---
version: "3.9"

services:

  #
  # Zookeeper Server
  #
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    healthcheck:
      test: curl -f http://zookeeper.sandbox.net:8080/commands || exit 1
      retries: 20
      interval: 10s
    ports:
      - "2181:2181"
    volumes:
      - sandbox_apps_path:/apps
      - /apps/sandbox/zookeeper/hadoop334/secrets:/etc/zookeeper/secrets
      - /apps/sandbox/zookeeper/hadoop334/data:/var/lib/zookeeper/data
      - /apps/sandbox/zookeeper/hadoop334/log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_UNSIGNED: "true"

  #
  # Apache Kafka Server
  #
  kafka-broker:
    image: confluentinc/cp-server:7.1.2
    hostname: kafka-broker
    container_name: kafka-broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "19092:19092"
    volumes:
      - sandbox_host_path:/apps/hostpath
      - sandbox_base_path:/apps/sandbox
      - sandbox_kafka_secrets:/etc/kafka/secrets
      - sandbox_kafka_data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 100
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_LISTENERS: INTERNAL://kafka-broker:19092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker:19092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-broker:19092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  #
  #
  #
  schema-registry:
    image: confluentinc/cp-schema-registry:7.1.2
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka-broker
    ports:
      - "8081:8081"
    volumes:
      - sandbox_host_path:/apps/hostpath
      - sandbox_base_path:/apps/sandbox
      - sandbox_kafka_secrets:/etc/schema-registry/secrets
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-broker:19092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO

#
volumes:
  sandbox_host_path:
    external: true
  sandbox_base_path:
    external: true
  sandbox_zookeeper_secrets:
    external: true
  sandbox_zookeeper_data:
    external: true
  sandbox_zookeeper_log:
    external: true
  sandbox_kafka_secrets:
    external: true
  sandbox_kafka_data:
    external: true
  sandbox_kafka_log:
    external: true

#
networks:
  default:
    external: true
    driver: bridge
    name: sandbox.net