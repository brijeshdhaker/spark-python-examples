#
#
#
version: "3.5"

services:
  #
  # Zookeeper Server
  #
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - /apps/hostpath:/apps/hostpath
      - /apps/hostpath/sandbox2/zookeeper/secrets:/etc/zookeeper/secrets
      - /apps/hostpath/sandbox2/zookeeper/data:/var/lib/zookeeper/data
      - /apps/hostpath/sandbox2/zookeeper/log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_UNSIGNED: "true"

  #
  # Apache Kafka Server
  #
  kafka-broker:
    image: confluentinc/cp-server:5.5.0
    hostname: kafka-broker
    container_name: kafka-broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "19092:19092"
    volumes:
      - /apps/hostpath:/apps/hostpath
      - /apps/hostpath/sandbox2/kafka-broker/secrets:/etc/kafka/secrets
      - /apps/hostpath/sandbox2/kafka-broker/data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_LISTENERS: INTERNAL://kafka-broker:19092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker:19092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-broker:19092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  #
  #
  #
  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka-broker
    ports:
      - "8081:8081"
    volumes:
      - /apps/hostpath:/apps/hostpath
      - /apps/hostpath/sandbox2/schema-registry/secrets:/etc/schema-registry/secrets
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-broker:19092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO

  #
  # Mysql Database Server
  #
  mariadb:
    image: mariadb:10.3.27
    container_name: mariadb
    hostname: mariadb
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - /apps/hostpath:/apps/hostpath
      - /apps/hostpath/sandbox2/mysql/conf:/etc/mysql/conf.d
      - /apps/hostpath/sandbox2/mysql/data:/var/lib/mysql
    environment:
      MYSQL_OPERATIONS_USER: operate
      MYSQL_OPERATIONS_PASSWORD: p@SSW0rd
      MYSQL_ROOT_PASSWORD: p@SSW0rd
      MYSQL_DATABASE: PUBLIC
      MYSQL_USER: developer
      MYSQL_PASSWORD: pDSSW0rd

  #
  # Cassandra Server
  #
  cassandra:
    image: cassandra:latest
    hostname: cassandra
    container_name: cassandra
    restart: always
    ports:
      - "7000:7000"
    volumes:
      - /apps/hostpath:/apps/hostpath
      - /apps/hostpath/sandbox2/cassandra/data:/var/lib/cassandra
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  #
  # HDFS & YARN Sandbox
  #
  namenode:
    image: brijeshdhaker/hadoop-namenode:2.10.1
    container_name: namenode
    hostname: namenode
    restart: always
    extra_hosts:
      - "hostmaster hostmaster.sandbox-bigdata.net:host-gateway"
    ports:
      - "50070:50070"
      - "9000:9000"
    volumes:
      - /apps/hostpath:/apps/hostpath
    environment:
      - CLUSTER_NAME=docker-sandbox
    env_file:
      - sandbox2.env

  #
  datanode:
    image: brijeshdhaker/hadoop-datanode:2.10.1
    container_name: datanode
    hostname: datanode
    extra_hosts:
      - "hostmaster hostmaster.sandbox-bigdata.net:host-gateway"
    ports:
      - "50075:50075"
      - "50010:50010"
    restart: always
    volumes:
      - /apps/hostpath:/apps/hostpath
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    env_file:
      - sandbox2.env

  #
  resourcemanager:
    image: brijeshdhaker/hadoop-resourcemanager:2.10.1
    container_name: resourcemanager
    hostname: resourcemanager
    restart: always
    extra_hosts:
      - "hostmaster hostmaster.sandbox-bigdata.net:host-gateway"
    ports:
      - "8088:8088"
      - "8032:8032"
    volumes:
      - /apps/hostpath:/apps/hostpath
    environment:
      SERVICE_PRECONDITION: "namenode:9000  namenode:50070  datanode:50075"
    env_file:
      - sandbox2.env

  #
  nodemanager:
    image: brijeshdhaker/hadoop-nodemanager:2.10.1
    container_name: nodemanager
    hostname: nodemanager
    restart: always
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: 8192M
        reservations:
          memory: 8192M
    extra_hosts:
      - "hostmaster hostmaster.sandbox-bigdata.net:host-gateway"
    ports:
      - "8042:8042"
      - "19888:19888"
    volumes:
      - /apps/hostpath:/apps/hostpath
    environment:
      SERVICE_PRECONDITION: "namenode:9000  namenode:50070  datanode:50075 resourcemanager:8088"
    env_file:
      - sandbox2.env

  #
  historyserver:
    image: brijeshdhaker/hadoop-historyserver:2.10.1
    container_name: historyserver
    hostname: historyserver
    restart: always
    extra_hosts:
      - "hostmaster hostmaster.sandbox-bigdata.net:host-gateway"
    ports:
      - "8188:8188"
    environment:
      SERVICE_PRECONDITION: "namenode:9000  namenode:50070  datanode:50075 resourcemanager:8088"
    volumes:
      - /apps/hostpath:/apps/hostpath
    env_file:
      - sandbox2.env

  #
  # Hive Server
  #
  hive-postgresql:
    image: brijeshdhaker/hive-postgresql:2.3.9
    hostname: hive-postgresql
    container_name: hive-postgresql
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - /apps/hostpath:/apps/hostpath

  #
  hive-metastore:
    image: brijeshdhaker/hive:2.3.9
    hostname: hive-metastore
    container_name: hive-metastore
    restart: always
    env_file:
      - sandbox2.env
    command: /opt/hive-2.3.9/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-postgresql:5432"
    links:
      - hive-postgresql
    ports:
      - "9083:9083"
    volumes:
      - /apps/hostpath:/apps/hostpath

  #
  hive-server:
    image: brijeshdhaker/hive:2.3.9
    hostname: hive-server
    container_name: hive-server
    restart: always
    env_file:
      - sandbox2.env
    links:
      - hive-metastore
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-postgresql/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
      - "10002:10002"
    volumes:
      - /apps/hostpath:/apps/hostpath
      - /opt/sandbox/hbase-2.4.9:/opt/hbase-2.4.9

  #
  # Hbase Server
  #
  hbase-master:
    image: brijeshdhaker/hbase-master:2.4.9
    hostname: hbase-master
    container_name: hbase-master
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "16000:16000"
      - "16010:16010"
    volumes:
      - "/apps/hostpath:/apps/hostpath"
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 zookeeper:2181"
    env_file:
      - sandbox2.env

  #
  hbase-region:
    image: brijeshdhaker/hbase-regionserver:2.4.9
    container_name: hbase-regionserver
    hostname: hbase-regionserver
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "16020:16020"
      - "16030:16030"
    volumes:
      - "/apps/hostpath:/apps/hostpath"
    env_file:
      - sandbox2.env
    environment:
      HBASE_CONF_hbase_regionserver_hostname: hbase-region
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 zookeeper:2181 hbase-master:16010"

  #
  # Zeppelin Notebook
  #
  zeppelin:
    image: apache/zeppelin:0.10.0
    container_name: zeppelin
    hostname: zeppelin
    restart: always
    extra_hosts:
      - "hostmaster hostmaster.sandbox-bigdata.net:host-gateway"
    ports:
      - "9080:8080"
      - "4040:4040"
    volumes:
      - /apps/hostpath:/apps/hostpath
      - /opt/sandbox/hadoop-2.10.1:/opt/hadoop-2.10.1
      - /opt/sandbox/hbase-2.4.9:/opt/hbase-2.4.9
      - /opt/sandbox/hbase-1.1.7:/opt/hbase-client
      - /opt/sandbox/hive-2.3.9:/opt/hive-2.3.9
      - /opt/sandbox/spark-2.3.4:/opt/spark-2.3.4
      - /opt/sandbox/spark-3.1.2-2.7:/opt/spark-3.1.2
      - /apps/hostpath/sandbox2/zeppelin/conf:/opt/zeppelin/conf
      - /apps/hostpath/.m2:/opt/zeppelin/.m2
      - /apps/hostpath/.ivy2:/opt/zeppelin/.ivy2
    env_file:
      - sandbox2.env

  #
  # Apache NiFi
  #
  nififlow:
    image: hortonworks/nifi:latest
    container_name: nififlow
    hostname: nififlow
    restart: always
    ports:
      - "19090:8080"
      - "19443:8443"
    volumes:
      - /apps/hostpath:/apps/hostpath
      - /apps/hostpath/sandbox2/nifi/conf:/opt/nifi/nifi-current/conf
      - /apps/hostpath/sandbox2/nifi/content_repository:/opt/nifi/nifi-current/content_repository
      - /apps/hostpath/sandbox2/nifi/database_repository:/opt/nifi/nifi-current/database_repository
      - /apps/hostpath/sandbox2/nifi/flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - /apps/hostpath/sandbox2/nifi/provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - /apps/hostpath/sandbox2/nifi/logs:/opt/nifi/nifi-current/logs
      - /apps/hostpath/sandbox2/nifi/state:/opt/nifi/nifi-current/state

#
volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:

#
networks:
  default:
    external: true
    driver: bridge
    name: sandbox-bigdata.net

